@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title Sequence Diagram (SD) - US 1003
autonumber

actor "Gerente" as Gerente
participant "<<presentation>> \n OpenCloseEnrollmentUI" as ui
control "<<application>> \n OpenCloseEnrollmentController" as controller
participant "<<application>> \n ListCourseService" as lstCourseService
participant "<<domain>> \n theCourse:Course" as course
participant "<<domain>> <<Value Object>> \n courseEnrollmentLimits:CourseEnrollmentLimits" as courseEnrollmentLimits
participant "<<domain>> <<Value Object>> \n :CourseDate" as courseDate
database "<<repository>> \n CourseRepository" as cRepository

activate Gerente
    Gerente -> ui: Pede para abrir/fechar uma inscrição num curso
    activate ui
    ui -> controller: create
    controller -> lstCourseService : create

            ui -> controller : allOpenCourses = listOpenCourses()
            activate controller
                controller -> lstCourseService : allOpenCourses()
            deactivate controller
            ui -> controller : allEnrollCourses = listEnrollCourses()
            activate controller
                controller -> lstCourseService : allEnrollCourses()
            deactivate controller

    ui -> ui: Mostra a informação das disciplinas que se encontram no estado open e disciplinas no estado enroll
    ui --> Gerente: Pede para escolher a disciplina

    Gerente -> ui: Escolhe a disciplina que pretende abrir/fechar inscrições
    ui -> ui: Mostra os dados do curso selecionado
    ui -> Gerente: Pede a confirmação da operação a realizar

    Gerente -> ui: Confirma a operação
    ui -> controller: openCloseEnrollment(theCourse)
    activate controller
        controller -> course: nextState()
        activate course
            course -> course : canCloseEnrollments()
            activate course
                course -> courseEnrollmentLimits : validEnrollmentsNumber(numEnrollments)
                activate courseEnrollmentLimits
                    courseEnrollmentLimits --> course : valid
                deactivate courseEnrollmentLimits
            deactivate course
            course -> courseDate** : create(startDate)
        deactivate course
       controller -> cRepository : save(theCourse)
       controller --> ui : theCourse
    deactivate controller

        ui --> Gerente : Informa o sucesso da operação
            deactivate ui

        deactivate Gerente

@enduml